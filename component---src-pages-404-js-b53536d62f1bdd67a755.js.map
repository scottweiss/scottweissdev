{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/search.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Search","props","_this","_Component","call","this","getOrCreateIndex","index","Index","load","searchIndex","search","evt","query","target","value","setState","results","expand","map","ref","documentStore","getDoc","state","render","react_default","placeholder","type","onChange","page","key","id","gatsby_browser_entry","to","path","tags","Component","Header","siteTitle","search_Search","siteSearchIndex","_4279699837","Layout","children","Fragment","header","Date","getFullYear","_755544856","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,u5HCGJ,SAASE,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUN,EAASE,EAATF,MACxCO,EADiDC,EAAAC,KACjDF,KAcFG,EAAkBP,GAAeI,EAAKI,aAAaR,YAEzD,OACES,EAAAd,EAAAC,cAACc,EAAAf,EAAD,CACEgB,eAAgB,CACdV,QAEFJ,MAAOA,EACPe,cAAa,QAAUR,EAAKI,aAAaX,MACzCK,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASjB,GAEX,CACEkB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASjB,GAEX,CACEgB,KAAI,sBACJC,QAASP,IAGVU,OACCd,EAASe,OAAS,EACd,CACEL,KAAI,WACJC,QAASX,EAASgB,KAAT,OAEX,IAELF,OAAOf,KAKhBJ,EAAIsB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbF,EAAIuB,UAAY,CACdrB,YAAasB,IAAUC,OACvBtB,KAAMqB,IAAUC,OAChBrB,KAAMoB,IAAUE,QAAQF,IAAUG,QAClCtB,SAAUmB,IAAUE,QAAQF,IAAUC,QACtC1B,MAAOyB,IAAUC,OAAOG,YAGX5B,8RC9FM6B,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAuBFC,iBAAmB,kBACjBJ,EAAKK,MACDL,EAAKK,MAELC,QAAMC,KAAKP,EAAKD,MAAMS,cA5BTR,EA8BnBS,OAAS,SAAAC,GACP,IAAMC,EAAQD,EAAIE,OAAOC,MACzBb,EAAKK,MAAQL,EAAKI,mBAClBJ,EAAKc,SAAS,CACZH,QAEAI,QAASf,EAAKK,MACXI,OAAOE,EAAO,CAACK,QAAQ,IAEvBC,IAAI,SAAA/C,GAAA,IAAGgD,EAAHhD,EAAGgD,IAAH,OAAalB,EAAKK,MAAMc,cAAcC,OAAOF,QArCtDlB,EAAKqB,MAAQ,CACXV,MAAK,GACLI,QAAS,IAJMf,8BAQnBsB,OAAA,WACE,OACEC,EAAAzD,EAAAC,cAAA,WACEwD,EAAAzD,EAAAC,cAAA,SAAOyD,YAAY,SAASC,KAAK,OAAOZ,MAAOV,KAAKkB,MAAMV,MAAOe,SAAUvB,KAAKM,SAChFc,EAAAzD,EAAAC,cAAA,UACGoC,KAAKkB,MAAMN,QAAQE,IAAI,SAAAU,GAAI,OAC1BJ,EAAAzD,EAAAC,cAAA,MAAI6D,IAAKD,EAAKE,IAEZN,EAAAzD,EAAAC,cAAC+D,EAAA,KAAD,CAAMC,GAAKJ,EAAKK,MAAOL,EAAK3D,OAC3B,KAAO2D,EAAKM,KAAK3C,KAAV,cAlBc4C,aCG9BC,EAAS,SAAAjE,GAAA,IAAGkE,EAAHlE,EAAGkE,UAAH,OACbb,EAAAzD,EAAAC,cAAA,cACEwD,EAAAzD,EAAAC,cAAA,WACAwD,EAAAzD,EAAAC,cAAA,UACIwD,EAAAzD,EAAAC,cAAC+D,EAAA,KAAD,CACEC,GAAG,KAGFK,IAGPb,EAAAzD,EAAAC,cAAA,gBAAOwD,EAAAzD,EAAAC,cAAC+D,EAAA,YAAD,CACPnB,MAAK,aASLW,OAAQ,SAAA7C,GAAI,OAER8C,EAAAzD,EAAAC,cAACsE,EAAD,CAAQ7B,YAAa/B,EAAK6D,gBAAgBjC,SAZvC5B,KAAA8D,QAqBXJ,EAAO3C,UAAY,CACjB4C,UAAW3C,IAAUC,QAGvByC,EAAO5C,aAAe,CACpB6C,UAAS,IAGID,QChCTK,EAAS,SAAAtE,GAAA,IAAGuE,EAAHvE,EAAGuE,SAAH,OACblB,EAAAzD,EAAAC,cAAC+D,EAAA,YAAD,CACEnB,MAAK,YASLW,OAAQ,SAAA7C,GAAI,OACV8C,EAAAzD,EAAAC,cAAAwD,EAAAzD,EAAA4E,SAAA,KACEnB,EAAAzD,EAAAC,cAAC4E,EAAD,CAAQP,UAAW3D,EAAKF,KAAKI,aAAaX,QAC1CuD,EAAAzD,EAAAC,cAAA,WACEwD,EAAAzD,EAAAC,cAAA,YAAO0E,GACPlB,EAAAzD,EAAAC,cAAA,oBACK,IAAI6E,MAAOC,cADhB,oBAfRpE,KAAAqE,KAwBFN,EAAOhD,UAAY,CACjBiD,SAAUhD,IAAUsD,KAAKlD,YAGZ2C","file":"component---src-pages-404-js-b53536d62f1bdd67a755.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { Component } from \"react\"\nimport { Index } from \"elasticlunr\"\nimport {  Link } from \"gatsby\"\n// Search component\nexport default class Search extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: ``,\n      results: [],\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <input placeholder=\"Search\" type=\"text\" value={this.state.query} onChange={this.search} />\n        <ul>\n          {this.state.results.map(page => (\n            <li key={page.id}>\n\n              <Link to={ page.path}>{page.title}</Link>\n              {\": \" + page.tags.join(`,`)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n  getOrCreateIndex = () =>\n    this.index\n      ? this.index\n      : // Create an elastic lunr index and hydrate with graphql query results\n        Index.load(this.props.searchIndex)\n\n  search = evt => {\n    const query = evt.target.value\n    this.index = this.getOrCreateIndex()\n    this.setState({\n      query,\n      // Query the index with search string to get an [] of IDs\n      results: this.index\n        .search(query, {expand: true})\n        // Map over each ID and return the full document\n        .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n    })\n  }\n}\n","import { StaticQuery, Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Search from \"./search\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div>\n    <h1 >\n        <Link\n          to=\"/\"\n          \n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    <div>  <StaticQuery\n    query={graphql`\n      query SearchIndexQuery {\n        siteSearchIndex {\n          index\n        }\n        \n\n      }\n    `}\n    render={data => (\n  \n        <Search searchIndex={data.siteSearchIndex.index} />\n   \n    )}\n  /></div>\n      \n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n// import \"./layout.scss\"\n\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Scott Weiss\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}