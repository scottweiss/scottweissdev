{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","post","key","node","id","to","frontmatter","path","className"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KA6BaI,EAAS,YAgCPO,UApDG,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OAChBP,EAAAQ,EAAAC,cAACN,EAAA,EAAD,KACEH,EAAAQ,EAAAC,cAACL,EAAA,EAAD,CAAKM,MAAM,OAAOC,SAAU,mCAG5BX,EAAAQ,EAAAC,cAAA,UACCF,EAAKK,kBAAkBC,MAAMC,IAAI,SAAAC,GAAI,OAClCf,EAAAQ,EAAAC,cAAA,MAAIO,IAAKD,EAAKE,KAAKC,IAClBlB,EAAAQ,EAAAC,cAACP,EAAA,KAAD,CACAiB,GAAIJ,EAAKE,KAAKG,YAAYC,KAAMC,UAAU,SACvCtB,EAAAQ,EAAAC,cAAA,OAAKa,UAAU,gBAAgBP,EAAKE,KAAKG,YAAYV","file":"component---src-pages-index-js-e79b02c7b1d2f7905527.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\n// import Accordion from \"../components/accordion\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n\n\n    <ul>\n    {data.allMarkdownRemark.edges.map(post => (\n        <li key={post.node.id}>\n         <Link \n         to={post.node.frontmatter.path} className=\"hello\">\n            <div className=\"blog preview\">{post.node.frontmatter.title}</div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n\n\n  </Layout>\n)\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 10\n      sort: { fields: [frontmatter___date], order: DESC}\n      filter: { frontmatter: { published: {eq: true}}}\n\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`\n\n// export const typeQuery = graphql`\n//   query TypeQuery {\n//    allMarkdownRemark(limit: 2000) {\n//       group(field: frontmatter___type) {\n//         fieldValue\n//         totalCount\n//       }\n//     }\n//   }\n// `\n\nexport default IndexPage\n\n\n\n"],"sourceRoot":""}