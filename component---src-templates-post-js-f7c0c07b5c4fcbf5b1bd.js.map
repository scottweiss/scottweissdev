{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","post","data","markdownRemark","a","createElement","title","keywords","dangerouslySetInnerHTML","__html","frontmatter","color","html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","href","_755544856","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAOe,SAASI,EAATO,GAA0B,IACjBC,EADiBD,EAAPE,KAC1BC,eAEP,OACCP,EAAAQ,EAAAC,cAACP,EAAA,EAAD,KACGF,EAAAQ,EAAAC,cAACN,EAAA,EAAD,CAAKO,MAAM,OAAOC,SAAU,mCAC/BX,EAAAQ,EAAAC,cAAA,WACAT,EAAAQ,EAAAC,cAAA,OAAKG,wBAAyB,CAACC,OAAQR,EAAKS,YAAYC,SACvDf,EAAAQ,EAAAC,cAAA,OAAKG,wBAAyB,CAACC,OAAQR,EAAKW,UAMxC,IAAMlB,EAAS,+CCrBtBL,EAAAG,EAAAD,EAAA,sBAAAsB,IAAA,IAAAlB,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAmB,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAAQ,EAAAiB,GAAAE,EAAA3B,EAAA,IAAA4B,EAAA5B,EAAAQ,EAAAmB,GAAA3B,EAAAG,EAAAD,EAAA,sBAAA0B,EAAAb,IAAAf,EAAA,SAaM6B,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBzB,EAAAQ,EAAAC,cAACa,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMnB,MACLqB,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOtB,MAEtDmB,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMnB,KAAOmB,EAAMnB,KAAKA,KAAOqB,EAAgBF,EAAMG,OAAOtB,MAGvDN,EAAAQ,EAAAC,cAAA,uCA4BfQ,EAAYc,UAAY,CACtBzB,KAAM0B,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6LCMzCK,EAAmB,SAAAtC,GAAkB,IAAfuC,EAAevC,EAAfuC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIErB,IAAMd,cAAcuC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,6GCbf,SAASW,EAATjD,GAA2D,IAA5CkD,EAA4ClD,EAA5CkD,YAAaC,EAA+BnD,EAA/BmD,KAAMC,EAAyBpD,EAAzBoD,KAAM7C,EAAmBP,EAAnBO,SAAUD,EAASN,EAATM,MACxC+C,EADiDC,EAAApD,KACjDmD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAArD,EAAAC,cAACqD,EAAAtD,EAAD,CACEuD,eAAgB,CACdR,QAEF7C,MAAOA,EACPsD,cAAa,QAAUP,EAAKG,aAAalD,MACzC8C,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASxD,GAEX,CACEyD,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASxD,GAEX,CACEuD,KAAI,sBACJC,QAASP,IAGVU,OACC1D,EAAS2D,OAAS,EACd,CACEL,KAAI,WACJC,QAASvD,EAAS4D,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACN7C,SAAU,GACV2C,YAAW,IAGbD,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAUyC,QAAQzC,IAAUC,QAClCtB,SAAUqB,IAAUyC,QAAQzC,IAAUE,QACtCxB,MAAOsB,IAAUE,OAAOC,YAGXkB,kXC9FTqB,EAAS,SAAAtE,GAAA,IAAGuE,EAAHvE,EAAGuE,UAAH,OACbC,EAAApE,EAAAC,cAAA,UACEoE,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGdH,EAAApE,EAAAC,cAAA,OACEoE,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTN,EAAApE,EAAAC,cAAA,MAAIoE,MAAO,CAAEG,OAAQ,IACnBJ,EAAApE,EAAAC,cAAC0E,EAAA,EAAD,CACEC,GAAG,IACHP,MAAO,CACL9D,MAAK,QACLsE,eAAc,SAGfV,OAOXD,EAAO3C,UAAY,CACjB4C,UAAW3C,IAAUE,QAGvBwC,EAAOF,aAAe,CACpBG,UAAS,IAGID,QC3BTY,UAAS,SAAAlF,GAAA,IAAG0B,EAAH1B,EAAG0B,SAAH,OACb8C,EAAApE,EAAAC,cAAC0E,EAAA,EAAD,CACEvD,MAAK,YASLC,OAAQ,SAAAvB,GAAI,OACVsE,EAAApE,EAAAC,cAAAmE,EAAApE,EAAA+E,SAAA,KACEX,EAAApE,EAAAC,cAAC+E,EAAD,CAAQb,UAAWrE,EAAKmD,KAAKG,aAAalD,QAC1CkE,EAAApE,EAAAC,cAAA,OACEoE,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPO,WAAY,IAGdb,EAAApE,EAAAC,cAAA,YAAOqB,GACP8C,EAAApE,EAAAC,cAAA,oBACK,IAAIiF,MAAOC,cADhB,mBAGEf,EAAApE,EAAAC,cAAA,KAAGmF,KAAK,4BAAR,cAzBVtF,KAAAuF,MAiCFP,EAAOvD,UAAY,CACjBD,SAAUE,IAAU8D,KAAK3D,YAGZmD","file":"component---src-templates-post-js-f7c0c07b5c4fcbf5b1bd.js","sourcesContent":["import React from \"react\"\n\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Template({data}) {\n\tconst {markdownRemark: post} = data;\n\n\treturn (\n\t\t<Layout>\n    \t<SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n\t\t<div>\n\t\t<div dangerouslySetInnerHTML={{__html: post.frontmatter.color}} />\n\t\t\t<div dangerouslySetInnerHTML={{__html: post.html}} />\n\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport const postQuery = graphql`\n\tquery BlogPostByPath($path: String!){\n\t\tmarkdownRemark(frontmatter: { path: { eq: $path} }){\n\t\t\thtml\n\t\t\tfrontmatter{\n\t\t\t\ttitle\n\t\t\t\tpath\n\t\t\t\tcolor\n\t\t\t\tdate\n\t\t\t}\n\t\t}\n\t}\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}